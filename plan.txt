Org::report_pg
imsiddiquee@cunning-goat-hwvix2.com
tigerhunter3

local development server or scratch org
    //first command for local developer server
    sfdx plugins:install @salesforce/lwc-dev-server
    //update local development server
    sfdx update
    sfdx plugins:update	//update all plugins

apply css on lightning card
    <template>
        <lightning-card title="My First LWC Component">
            <p class="slds-p-aroung-small" style="min-width: 30rem;">
                <lightning-input label="Write your name" value={name} onchange={updateName}>

                </lightning-input>

                <br/>
                Hello <b>{name}</b>, welcome to lwc component!

            </p>
        </lightning-card>
    </template>

for-each in html

          <template for:each={todoTasks} for:item="todoTask">
            <li class="slds-item" key={todoTask.id}>            
            </li>
          </template>

Base on index delete item from a list
    const todoTaskIndex = todoTasks.findIndex((task) => task.id === idToDelete);
    todoTasks.splice(todoTaskIndex, 1);



Salesforce module used in LWC
    
    1)@salesforce/apex
    2)@salesforce/i18n		==>local,currency,lang
    3)@salesforce/label		==>import labelName from '@salesforce/label/labelReference';	==>namespace.labelName
    4)@salesforce/schema	
    5)@salesforce/user

Load external CSS ,JavaScript,chart library In LWC
    import { loadScript, loadStyle } from 'lightning/platformResourceLoader';
        https://github.com/amitastreait/Static-Resource-LightningWebComponents


dummy record type id
     recordTypeId: '012000000000000AAA'

import defination

    import { getPicklistValues } from "lightning/uiObjectInfoApi";
      ==>getPicklistValues is a method.
    import INDUSTRY_FIELD from "@salesforce/schema/Account.Industry";
       ==> INDUSTRY_FIELD is a variable.

APEX 
    loop on MAP variable
        for(Account acc:newAccountMap.values())
        {
            acc.id
        }
Transaction in apex

        Savepoint sp = Database.setSavepoint();
        try
        {
            update listAccToUpdate;
        }
        catch(Exception e)
        {
            Database.RollBack(sp);
            System.debug(e);
        }

salesforce standard funtion
    get user id ==> userinfo.getUserId()

SOQL get ProcessBuilder,Flow,AutoLaunchFlow information

SELECT Id, ApiName, ProcessType, TriggerType, Description, Label, Builder, IsActive, LastModifiedDate, LastModifiedBy, DurableId, ManageableState FROM FlowDefinitionView limit 10

Process-Builder
	ProcessType==>Workflow==> Process-Builder==>builder ==>Cloud Flow Designer

Flow
	ProcessType==>Flow==> Flow==>builder ==>Flow Builder
	ProcessType==>AutoLaunchedFlow==> Flow==>builder ==>Flow Builder


trigger class stacks/framework
https://www.youtube.com/watch?v=BUEvi7exEJ8&t=510s&ab_channel=SFDCPanther

1)TriggerInterface
2)ContactTrigger //need to configure
3)TriggerDispatcher 
4)ContactTriggerHandler//need to configure
5)ContactTriggerHelper//need to configure
6)TransactionLogHandler

trigger error message
	for(Contact conObj:trigger.Old)
	{
		if(conObj.IsPrimary__c)
			{
				conObj.addError('Primary contact cannot be deleted!')
			}
	}	


SOQL enforce security
    SELECT Name,Industry
    FROM Account
    WITH SECURITY_ENFORCED
    Order by Name

    like operator
        Select count() from Account where Name like 'Tech%'
    lookup query from parent
        standard object
            1)as an example account and contact, account==>parent,contact==>child
            2)go to child object get the 'Child relationShip name'==>Contacts
            3)[Select Id,(Select Id,Name from Contacts) from Account]
            4)for (Account acc:accList)
            {
                for(Contact con:Contacts)
                {
                    //get related contacts
                }
            }

        custom object
            1)as an example student and book, student==>parent,book==>child
            2)go to child object get the 'Child relationShip name'==>Books
            3)[Select Id,(Select Id,Name from Books__r) from Student__c]
            4)for (Student__c stu:stuList)
            {
                for(Book book:Books__r)
                {
                    //get related books
                }
            }

    lookup query from child
        standard object
            1)as an example account and contact, account==>parent,contact==>child
            2)go to child object get the 'Child relationShip name'==>Contacts
            3)[select Id,Name,Account.Name from contact]
            4)for (Contact con:contactList)
            {
               string accountName=con.Account.Name;
            }

        custom object
            1)as an example student and book, student==>parent,book==>child
            2)go to child object get the 'Child relationShip name'==>Books
            3)[Select Id,Student__r.Name,Student__r.RollNumber__c from Book__c]
            4)for (Book__c book:bookList)
            {
                string studentName = book.Student__r.Name;
                string roolNumber = book.Student__r.RollNumber__c ;
            }

SOQL relationship queries
resouce
https://developer.salesforce.com/docs/atlas.en-us.soql_sosl.meta/soql_sosl/sforce_api_calls_soql_select_conditionexpression.htm
    parent		child
    school		student
    company		contact
		
		parent to child query
			First need to collect child object relationship name, so we need to view the child object get the lookup relationship name.
				Chidl relationship name ==> Contacts
					SELECT Name,Phone,Industry,Rating,(SELECT Name,phone from Contacts where name like 'A%') From Account where rating ='Hot'
				
			custom object
				Chidl relationship name ==> Students
					Select Name,City__c,online_Class__c, (Select Name, Class__c from Students__r where Class__c='6') from School__c where city_-c='Delhi'
						need to check child relationship name with __r,for custom object it's mandatory
				
			 
	
		child to parent query
			First need to collect child object field name , so we need to view the child object get the field name.
				Field Name ==> Account
					Select Name,phone,email,Account.Name,Account.Rating,Account.Industry From contact where Account.Rating='Hot' AND NAME like 'A%'
		
		
			custom object
				Field Name ==> school
					Select Name,School__c,Class__c,Fees__c,School__r.Name,School__r.City__c From Student__c
						need to check parent field-name used process



    
APEX primitive data types
    Boolean isActive=true;
    Integer num=0;
    Decimal price=100.50;
    String s='Hello world';
    ID id ='0124445';

    List to MAP
        List<Account> accList=[Select Id,Name from Account];
        Map<Id,Account> idToAccountMap=new Map<Id,Account>(accList);
        Map<Id,List<Account>> idToAccountMap=new Map<Id,List<Account>>(accList);
    enum is an abstract data type   
        public enum Weekdays {MON,TUE,WED,THU,FRI,SAT,SUN};
        Weekdays w=Weekdays.MON;
        if(w==Weekdays.MON)
            return w;
    Set methods
        Set<String> stringSet=new Set<String>();
        Set<Id> stringSet=new Set<Id>();
            add(setElement)
            addAll(fromList)/addAll(fromSet)
            clear()
            clone()
            contains(setElement)
            containsAll(listToCompare)/containsAll(setToCompare)
            equals(set2)
            isEmpty()
            remove(setElement)
            removeAll(listOfElementsToRemove)/removeAll(setOfElementsToRemove)==>remove two set common elements
            retainAll(listOfElementsToRetain)/retainAll(setOfElementsToRetain)==>get two set common elements
            size()
    Map
        Map<Integer,String> intToStrMap=new Map<Integer,String>();
        Map<Id,Account> acIdMap=new Map<Id,Account>([SELECT ID,Name FROM Account limit 2]);

            put(key,value)
            putAll(fromMap)/putAll(sObjectArray)
            remove(key)
            size()
            values()==>get all values
            clear()
            clone()
            containsKey(key)
            equals(map2)
            get(key)
            isEmpty()
            keySet()==>get all keys

    sObject
        Account acc=new Account(Name='Test',Phone='123456');

        Account acc =new Account();
        acc.Name='';
        acc.Phone='';

        Student__c std=new Student__c();
        std.Name='';
        std.Fee__c=100;

        sObject obj;
        obj=new Account(Name='Test',Phone='123456');
        Account acc=(Account)obj; //casting
        
DML operation
    DML statement
        INSERT
        UPDATE
        DELETE
    DataBase class method
    https://www.youtube.com/watch?v=yCp07mvWqfI&list=PL-gW8Fj5TGro_a8irvZUZUKJdEpWIGMB8&index=8&ab_channel=SanjayGupta
        
        Database.SaveResult[] srList = Database.insert(recordList,false);
               allOrNone parameter= true,false,(false==>partial save,true==>need to full save)
        
        Database.UpsertResult resutls[]= Database.upsert(recordList,false);
        Database.DeleteResult resutls[]= Database.delete(recordList,false);
    
    Default allOrNone is true, all will throw an exception if a failure occurs.
        INSERT contactList;
        or
        Database.INSERT(contactList);
        or
        Database.insert(contactList,true);

InvocableMethod can be used in flow and process-builder
    @InvocableMethod
    public static List<String> UpdateAccountName()
    {

    }


apex test class
    https://www.youtube.com/watch?v=RwrA6Y7Bvf0&list=PL-gW8Fj5TGro_a8irvZUZUKJdEpWIGMB8&index=1&ab_channel=SanjayGuptaSanjayGupta
    
apex test class for api callout
    https://www.youtube.com/watch?v=OQrDrKzm_v0&ab_channel=SFDCStop
    https://github.com/rahulmalhotra/SFDC-Integration-Tutorial/blob/restcallouttest/force-app/main/default/classes/SFDCStopCalloutTest.cls
    1)create mock class
    2)create test class

apex naming convention
    variable
            accIdSet
            accIdMap
            accList
            deletedAccList
            deletedAcc
    
lwc lifecycle hooks
    consttructor(When  component initialized)

        flow==>parent to child
        elements==> can not access
        @api value==> can not access
        @track value==>can access

    connectedcallback(When component inserted into dom)
        flow==>parent to child
        fire==>more than 1

    disConnectedcallback(When component is removed from dom)
        flow==>parent to child
        fire==>more than 1

    render

    rendercallback(used to update user interface)
        flow==>parent to child
        fire==>more than 1

    errorCallBack(error,stack)


    apex http verbs
        get,delete==>don't have request body, pass data on parameter
        post,put,patch==>have request body.
        callout==>create salesforce api, any one can access the api.


    
SOQL check null
	Null check condition for User object SOQL query
		User singleUser; // is null
		for(User record: [SELECT id,name,alias FROM user WHERE alias = 'random' AND name = 'Random Name' LIMIT 1]) {
		  singleUser = record;
		}